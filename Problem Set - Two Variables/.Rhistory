boxplot(price~cut,data=diamonds, main="Price by CUT",
xlab="CUT", ylab="Price")
boxplot(price~cut,data=diamonds, main="Price by CUT", xlab="CUT", ylab="Price")
setwd("D:/IIML/Crisp Analytics/Udacity/DAta analysis with R/Problem Set - Two Variables/")
library(ggplot2) #must load the ggplot package first
data(diamonds) #loads the diamonds data set since it comes with the ggplot package
clarity_groups <- group_by(diamonds, clarity)
library(dplyr)
clarity_groups <- group_by(diamonds, clarity)
clarity_groups <- group_by(diamonds, clarity)
?group_by
diamondsByClarity <- summarise(clarity_groups,
mean_price = mean(price),
median_price = median(price),
min_price = min(price),
max_price = max(price),
n = n())
View(diamondsByClarity)
data(diamonds)
library(dplyr)
diamonds_by_clarity <- group_by(diamonds, clarity)
diamonds_mp_by_clarity <- summarise(diamonds_by_clarity, mean_price = mean(price))
diamonds_by_color <- group_by(diamonds, color)
diamonds_mp_by_color <- summarise(diamonds_by_color, mean_price = mean(price))
p1 <- ggplot(diamonds_mp_by_clarity, aes(clarity, mean_price))
p1 <- ggplot(diamonds_mp_by_clarity, aes(clarity, mean_price)) + geom_bar()
p1
ggplot(diamonds_mp_by_clarity, aes(clarity, mean_price)) + geom_bar()
diamonds_mp_by_clarity
ggplot( data = diamonds_mp_by_clarity, aes(x = clarity, y = mean_price ))
ggplot( data = diamonds_mp_by_clarity, aes(x = clarity, y = mean_price )) + geom_area()
ggplot( data = diamonds_mp_by_clarity, aes(x = clarity, y = mean_price )) + geom_bar()
?geom_bar
ggplot( data = diamonds_mp_by_clarity, aes(x = clarity, y = mean_price )) + geom_bar(stat = "count")
ggplot( data = diamonds_mp_by_clarity, aes(x = clarity, y = mean_price )) + geom_bar(stat = "count")
?geom_bar
ggplot( data = diamonds_mp_by_clarity, aes(y = clarity, x= mean_price )) + geom_bar(stat = "count")
?geom_bar
ggplot( data = diamonds_mp_by_clarity, aes(y = clarity, x= mean_price )) + geom_bar(stat = "identity")
?geom_bar
ggplot( data = diamonds_mp_by_clarity, aes(y = clarity, x= mean_price )) + geom_bar(stat = "identity")
ggplot( data = diamonds_mp_by_clarity, aes(x = clarity, y= mean_price )) + geom_bar(stat = "identity")
ggplot( data = diamonds_mp_by_clarity, aes(x = clarity, y= mean_price )) + geom_bar(stat = "identity", color = clarity)
ggplot( data = diamonds_mp_by_clarity, aes(x = clarity, y= mean_price )) + geom_bar(stat = "identity", color = diamonds_mp_by_clarity$clarity)
ggplot( data = diamonds_mp_by_clarity, aes(x = clarity, y= mean_price )) + geom_bar(stat = "identity", fill = diamonds_mp_by_clarity$clarity)
ggplot( data = diamonds_mp_by_clarity, aes(x = clarity, y= mean_price )) + geom_bar(stat = "identity")
?geom_bar
ggplot( data = diamonds_mp_by_clarity, aes(x = clarity, y= mean_price, fill = clarity )) + geom_bar(stat = "identity")
diamonds_by_color <- group_by(diamonds, color)
diamonds_mp_by_color <- summarise(diamonds_by_color, mean_price = mean(price))
ggplot(diamonds_mp_by_color, aes(x = color, y = mean_price, fill = color)) + geom_bar(stat = 'identity')
p2 <- ggplot(diamonds_mp_by_color, aes(x = color, y = mean_price, fill = color)) + geom_bar(stat = 'identity')
p1 <- ggplot( data = diamonds_mp_by_clarity, aes(x = clarity, y= mean_price, fill = clarity )) + geom_bar(stat = "identity")
grid.arrange(p1,p2, ncol=1)
library(gridExtra)
grid.arrange(p1,p2, ncol=1)
grid.arrange(p1,p2, nrow=1)
ggsave('mean_price_bar_pplots.png', width = 16, height = 9, dpi = 100)
ggsave('mean_price_bar_pplots.png', width = 16, height = 9, dpi = 300)
grid.arrange(p1,p2, nrow=1)
ggsave('mean_price_bar_pplots.png', width = 16, height = 9, dpi = 300)
ggsave('mean_price_bar_pplots.png', width = 16, height = 9, dpi = 500)
ggsave('mean_price_bar_pplots.png', width = 32, height = 18, dpi = 200)
ggsave('mean_price_bar_pplots.png', width = 16, height = 9, dpi = 400)
ggsave('mean_price_bar_pplots.png', width = 8, height = 4.5, dpi = 400)
ggplot(diamonds_mp_by_color, aes(x = color, y = mean_price, fill = color)) + geom_bar(stat = 'identity')
ggsave('mean_price_bar_pplots_color.png', width = 8, height = 4.5, dpi = 400)
grid.arrange(p1,p2, nrow=1)
